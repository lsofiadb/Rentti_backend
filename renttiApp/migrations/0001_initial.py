# Generated by Django 3.2.7 on 2021-10-12 21:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('nit_rut', models.IntegerField(verbose_name='nit_rut')),
                ('username', models.CharField(max_length=15, unique=True, verbose_name='Username')),
                ('password', models.CharField(max_length=256, verbose_name='Password')),
                ('name', models.CharField(max_length=30, verbose_name='Name')),
                ('office_address', models.CharField(max_length=50, verbose_name='office_address')),
                ('telephone_number', models.IntegerField(verbose_name='telephone_number')),
                ('corporate_email', models.EmailField(max_length=50, verbose_name='corporate_email')),
                ('web_site', models.CharField(max_length=50, verbose_name='web_site')),
                ('chamber_of_comerce', models.CharField(max_length=30, verbose_name='chamber_of_comerce')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Leaseholder',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('insurance_number', models.IntegerField(verbose_name='insurance_number')),
                ('company_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leaseholder', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('commercial_agent_name', models.CharField(max_length=50, verbose_name='commercial_agent_name')),
                ('agent_telephone_number', models.IntegerField(verbose_name='agent_telephone_number')),
                ('agent_email_address', models.CharField(max_length=50, verbose_name='agent_email_address')),
                ('score', models.FloatField(verbose_name='score')),
                ('company_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplier', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('plate', models.IntegerField(primary_key=True, serialize=False)),
                ('model', models.CharField(max_length=50, verbose_name='model')),
                ('brand', models.CharField(max_length=50, verbose_name='brand')),
                ('current_price', models.FloatField(verbose_name='current_price')),
                ('status', models.BooleanField(default=False, verbose_name='status')),
                ('supplier_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicle', to='renttiApp.supplier')),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('initial_date', models.DateTimeField()),
                ('final_date', models.DateTimeField()),
                ('total_price', models.FloatField()),
                ('leaseholder_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservation_leaseholder', to='renttiApp.leaseholder')),
                ('vehicle_plaque', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservation_vehicle_plaque', to='renttiApp.vehicle')),
            ],
        ),
    ]
